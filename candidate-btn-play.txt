Scratch notes to myself problem solving the vote buttons. 
I'd normally throw this away...



  return for (var i = 0; i < this.candidates.length; i++) {
      this.candidates[i].name + this.candidates[i].votes;
    }


//THIS WORKS IN CONSOLE…

To do this dynamically I need to know which button was clicked

candidates = $('#candidates li'); // searches dom returs array

nameKey = candidates[0].innerText; // returns name of candidate
or
li.childNodes // returns array of text[0], button[1]

user.castVote(findCandidate(nameKey, countMeUp.candidates), countMeUp); // castVote now has it’s arguments loaded


/* basic css styling so I can demonstrate development process but could better layout and design to be sure :) */




//testing manual implementation on click

    $('#candidates button').click(function() {
	var candidates = $('#candidates li');
	return candidates;
        var nameKey = candidates[0].innerText;
        return nameKey;
        var candidateObject = findCandidateObject(nameKey, countMeUp.candidates)
        return candidateObject;
        user.castVote(candidateObject, countMeUp);
        showVotes();
      });



function findCandidateObject(nameString, candidateList) {
    for (var i = 0; i < candidateList.length; i++) {
        if (candidateList[i].name === nameString) {
          return candidateList[i];
        }
    }
  };


  function showVotes() {
    $('#total-votes').text(countMeUp.totalVotes);
  }



$(document).ready (function (){
    $('#candidates button').click(function() {
        user.castVote(candidate, countMeUp);
        showVotes();
      });
});


$('#candidates button').click



    $('#candidates button').click(function() {
        var nameKey = (this).previousSibling; // returns “Name”
        var candidateObject = findCandidateObject(nameKey, countMeUp.candidates); // uses string nameKey to find and return the object I must pass as an argument to cast a vote.
        user.castVote(candidateObject, countMeUp); // parameters I need to define function
        showTotalVotes(); // update the page
      });


IDEA: put id on unordered list and for each element get the previous sibling name

$(‘ul’)
	$(‘button’).each(function() {
		on click
		get previous sibling
		use as name key etc.
	}




Must happen on click…

  $('#candidates button').click(function() {
  	nameKey = $('#candidates li').children()[0].previousSibling;    	console.log(nameKey);
      	user.castVote(findCandidate(nameKey, countMeUp.candidates), countMeUp);
  	showVotes();
    });


///should work!!!
$('#candidates button').click(function() {
	var nameKey = (this).previousSibling;
	console.log(nameKey);
	var candidateObject = findCandidate(nameKey, countMeUp.candidates);
	console.log(candidateObject);
	user.castVote(candidateObject, countMeUp);
	showVotes();
  });



  $('#candidates button').click(function() {
  	nameKey = (this).previousSibling;
	console.log(nameKey);
	user.castVote(findCandidate(nameKey, countMeUp.candidates), countMeUp);
  	showVotes();
    });


li.childNodes // returns array of text[0], button[1]

childNodes
:
NodeList[2]


Li children

previousSibling
:
text
	data
:
"Dante"


_________________


findBtnSibling = $('#candidates li')
findBtnSibling.children();


$('#candidates li').children()[0].previousSibling;
"Dante" /// this gets me the buttons sibling text which can be used as a key

How do I get the sibling of the button clicked?

on click find your previousSibling
_________________



function findNameKey() {
    keys = $('#candidates li');
	names = [];
    for (var i = 0; i < keys.length; i++) {
      names.push(keys[i].childNodes[0].data);
    }
    return names;
  };
undefined
findNameKey();
["Dante", "Gabriel", "Blake"]
